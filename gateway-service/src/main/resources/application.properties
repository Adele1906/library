
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/external

spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external
spring.security.oauth2.client.provider.external.user-name-attribute=preferred_username


spring.security.oauth2.client.registration.external.provider=external
spring.security.oauth2.client.registration.external.client-name=external-client
spring.security.oauth2.client.registration.external.client-id=external-client
spring.security.oauth2.client.registration.external.client-secret=T6dvJ5AW07HAd22ukPfi9VJ5Mo7cUJ5V
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code


spring.datasource.url=jdbc:postgresql://localhost:5432/keycloak
spring.datasource.username=keycloak
spring.datasource.password=keycloak123
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


#Ribbon is auto integrated with Zuul and for this exercise we are not using that.
ribbon.eureka.enabled=false
management.endpoints.web.exposure.include=*

